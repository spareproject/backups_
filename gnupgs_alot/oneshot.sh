#!/bin/env bash
###############################################################################################################################################################################################################
function usage {
cat << EOF
assumes correct setup or exits
EOF
if [[ ${2} ]];then printf "%s\n" "${2}";fi
exit ${1}
}
###############################################################################################################################################################################################################
idVendor=="26bd",
idProduct=="9917",
serial=="07014610ACFC9978",
###############################################################################################################################################################################################################
umask 077
clear;cat /etc/banner
###############################################################################################################################################################################################################
#OLD=$(ls /dev | grep sd | cut -c 1-3 | uniq)
#read -p "plugin usb and hit enter"
#NEW=$(ls /dev | grep sd | cut -c 1-3 | uniq)
#DEV=${NEW#$OLD}
#echo $DEV
###############################################################################################################################################################################################################
#echo $(stat -c %U /dev/$DEV)
# insert code to check /dev/${DEV} 
###############################################################################################################################################################################################################
# udev + symlink
while [[ ! -b /dev/gnupg ]];do
read -p "plugin usb... (hit enter)"
if [[ ! -b /dev/gnupg ]];then clear;cat /etc/banner;echo "device /dev/gnupg does not exist... ";fi
done
###############################################################################################################################################################################################################
mount /dev/gnupg1
###############################################################################################################################################################################################################
#if [[ ! -d /dev/mount/gnupg ]];then usage 1 "gnupg does not exist...";fi
#if [[ ! -f /dev/mount/trigger.asc ]];then usage 1 "trigger.asc does not exist...";fi
cp -ar /tmp/mount/gnupg       /tmp/
cp -ar /tmp/mount/trigger.asc /tmp/
touch /tmp/unlocked
sync
umount /dev/gnupg1
sync
###############################################################################################################################################################################################################
read -rp "enter pin: " PIN
gpg --homedir /tmp/gnupg --passphrase-fd 0 -d /tmp/trigger.asc <<< $(dd if=/dev/gnupg2 bs=1 count=100 ibs=1 skip=${PIN} 2>/dev/null)
###############################################################################################################################################################################################################
function detach_meh {
sleep 60
/usr/bin/rm -r /tmp/gnupg
/usr/bin/rm -r /tmp/mount
/usr/bin/rm -r /tmp/trigger.asc
/usr/bin/rm -r /tmp/unlocked
pkill gpg-agent
}
(detach_meh &)&

